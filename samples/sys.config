
%%% -*- mode:erlang -*-
%%% Warning - this config file *must* end with <dot><whitespace>
[
 {chronica,
  [
   % Format:
   %   {chronica, [
   %       Rules,
   %       Flows,
   %       Formats,
   %       InternalLogger,
   %       InternalLoggerFilename,
   %       LogRoot,
   %       MaxFileSize,
   %       MaxFileNum,
   %       LogIfacePath,
   %   ]}
   %
   %   Rules = {rules, [Rule]}
   %   Rule = {ModuleNameFilter, [Property]}
   %   ModuleNameFilter = atom() % use * and ?
   %   Property = {priority, PriorityValue} | {flow, FlowName} % both properties are mandatory
   %   PriorityValue = nothing | error | warning | info | trace | debug
   %   Flows = {flows, [Flow]}
   %   Flow = {FlowName, [Output]}
   %   FlowName = atom()
   %   Output = {Type, [Options]}
   %   Type = tty | file | udp | journald
   %   Options = {name, Name} | {format, Format} | {udp_opt, {IP, Port}} | {mailbox_tty, pos_integer()}
   %   Formats = {formats, [Format]},
   %   Format = {FormatName, FormatString},
   %   FormatName = atom(),
   %   FormatString = string(),
   %   InternalLogger = {internal_logger, [ILOption]}
   %   ILOption = file | debug % file - write log to file, debug - turn on debug
   %   InternalLoggerFilename = {internal_logger_filename, Name}
   %   Name = string()
   %   LogRoot = {log_root, DirFormat}
   %   DirFormat = string() % use <Node> <Year> <Month> <Day> <Hour> <Minute> <Second> in string
   %   MaxFileSize = {max_file_size, number()}
   %   MaxFileNum = {max_file_num, number()}

   {rules,
    [
     {all_errors,  "*",                                 error, [journald], on}, % catch all errors
     {all_tc,      "tc_*",                              debug, [default],        off},
     {default,     "*&!mycelium*&!tts*",                debug, [default],        off},
     {default_bin, "*&!mycelium*&!tts*",                debug, [default_bin],    off},
     {default2,    "*&!fun_trace*&!mycelium*&!tts*",	debug, [default],        off},
     {all_info,    "*&!error_logger",                   info,  [info],           off},
     {all_info_bin,"*",                                 info,  [info_bin],       off},
     {all_logs,    "*",                                 debug, [total_bin],      off},
     {notifier,    "informer*|jabber*|email_notifier*", debug, [cn, screen],     off}
    ]
   },
   {flows,
    [
     {screen,        [{tty, [{format, short}, {mailbox_tty, 1000}]}]},
     {default,       [{file, [{name, "default.log"}]}]},
     {error,         [{file, [{name, "error.log"}]}]},
     {default_bin,   [{file, [{name, "default.log.bin"}, {format, binary}]}]},
     {total_bin,     [{file, [{name, "total.log.bin"}, {format, binary}]}]},
     {info,          [{file, [{name, "info.log"}]}]},
     {info_bin,      [{file, [{name, "info.log.bin"}, {format, binary}]}]},
     {cn,            [{file, [{name, "cn.log"}]}]},
     {cn_bin,        [{file, [{name, "cn.log.bin"}, {format, binary}]}]},
     {journald,      [{journald, [{format, default}]}]}
    ]
   },
   {formats,
    [
     % "%Id %Y-%M(%Ml)-%D %H:%Mi:%S:%Ms %PRIORITY %P %Priority %Pid %File %Line %Module %Function %Message %MessageLine"
     {default, "%Y-%M-%D %H:%Mi:%S:%Ms %PRIORITY %Pid [%Module:%Line]: %Message\n"},
     {short, "%Y-%M-%D %H:%Mi:%S:%Ms %P %Pid [%Module:%Line]: %Message\n"}
    ]
   },
   %% Customize for extended backends
   {backend_modules, [{journald, chronica_journald_backend}]},
   {active, true},
   {colored, true},
   {sync, false},
   {rotate_at_start, false},
   {file_check_timeout, 10000},
   {internal_logger, [{file, "chronica", {101048576, 1}, error}, {tty, error}]},
   {data_root, "/tmp/<Node>"},
   {log_root, "/tmp/<Year>_<Month>_<Day>_<Hour>_<Minute>_<Second>_<Node>"},
   {max_file_size, 104857600}, % 1Gb
   {max_file_num,  20},
   {debug, true},
   {debug_level, 2}
  ]
 }
].
